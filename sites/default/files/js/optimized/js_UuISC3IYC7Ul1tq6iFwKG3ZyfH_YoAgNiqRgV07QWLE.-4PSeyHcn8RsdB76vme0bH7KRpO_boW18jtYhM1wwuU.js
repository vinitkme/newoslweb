(function(e,n,t){'use strict';n.behaviors.contentTranslationDependentOptions={attach:function(i){var r=e(i),s=t.contentTranslationDependentOptions,a,l;function c(t,i){return function(s){n.behaviors.contentTranslationDependentOptions.check(t,i,e(s.target))}};if(s&&s.dependent_selectors){for(var o in s.dependent_selectors){if(s.dependent_selectors.hasOwnProperty(o)){a=r.find('input[name^="'+o+'"]');l=s.dependent_selectors[o];a.on('change',c(a,l));n.behaviors.contentTranslationDependentOptions.check(a,l)}}}},check:function(n,t,s){var i=s,a;function o(n,t){return e(t).val()===a};for(var l in t){if(t.hasOwnProperty(l)){a=t[l];if(!s){i=n.filter(o)};if(i.is('input[value="'+a+'"]:checked')){n.prop('checked',!0).not(i).prop('disabled',!0)}
else{n.prop('disabled',!1)}}}}};n.behaviors.contentTranslation={attach:function(n){e(n).find('table .bundle-settings .translatable :input').once('translation-entity-admin-hide').each(function(){var t=e(this),n=t.closest('.bundle-settings');if(!t.is(':checked')){n.nextUntil('.bundle-settings').hide()}
else{n.nextUntil('.bundle-settings','.field-settings').find('.translatable :input:not(:checked)').closest('.field-settings').nextUntil(':not(.column-settings)').hide()}});e('body').once('translation-entity-admin-bind').on('click','table .bundle-settings .translatable :input',function(n){var s=e(n.target),i=s.closest('.bundle-settings'),t=i.nextUntil('.bundle-settings'),a=t.filter('.field-settings');if(s.is(':checked')){i.find('.operations :input[name$="[language_alterable]"]').prop('checked',!0);a.find('.translatable :input').prop('checked',!0);t.show()}
else{t.hide()}}).on('click','table .field-settings .translatable :input',function(n){var i=e(n.target),s=i.closest('.field-settings'),t=s.nextUntil('.field-settings, .bundle-settings');if(i.is(':checked')){t.show()}
else{t.hide()}})}}})(jQuery,Drupal,drupalSettings);